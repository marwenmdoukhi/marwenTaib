security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        healthcheck:
            pattern: ^/healthcheck
            security: false
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                success_handler: redirect.after.login
                default_target_path: /login$
                always_use_default_target_path: true
                failure_path: fos_user_security_login
            saml:
#                provider: saml_provider
                # Match SAML attribute 'uid' with username.
                # Uses getNameId() method by default.
                username_attribute: cnb_id
                # Use the attribute's friendlyName instead of the name
                use_attribute_friendly_name: false
                user_factory: user.factory
                persist_user: true
                always_use_default_target_path: true
                default_target_path: /dashboard

            logout:
                path: logout
                target: /
            anonymous:    true

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/doc, role:  IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/saml/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/saml/logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/saml/metadata, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/dead-line, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/myact, role: ROLE_USER }
        - { path: ^/api, role: ROLE_USER }
        - { path: ^/admin/, role: ROLE_USER }
